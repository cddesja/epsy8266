cort.data$female <- ifelse(cort.data$Gender=="female", 1, 0)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cdiff ~ mald1 + mald2 + polyrisk + mald1x + mald2x + female
ints ~ cdiff + mald1 + mald2 + ts_e + female
into ~ cdiff + mald1 + mald2 + ts_e + female
'
sfit <- sem(smod, cort.data, missing = "fiml")
setwd("~/Documents/GitHub/epsy8266/course_materials/data/")
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
wiscr <- foreign::read.spss("wiscsem.sav", to.data.frame = T)
head(wiscr)
# Chunk 3
summary(wiscr)
apply(wiscr, 2, var)
# Chunk 4
wiscr.sub <- wiscr[,-(1:2)]
par(mfrow = c(3, 4),
mar = c(1, 2, 2, 1) + .1)
for(i in 1:11){
boxplot(wiscr.sub[,i], main = paste(names(wiscr.sub))[i])
}
# Chunk 5
par(mfrow = c(3, 4),
mar = c(1.5, 2, 2, 1) + .1)
for(i in 1:11){
hist(wiscr.sub[,i], main = paste(names(wiscr.sub))[i])
}
# Chunk 6
for(i in 1:11){
cat("The variable is ",names(wiscr.sub)[i], ".\n", sep = "")
stem(wiscr.sub[,i])
}
# Chunk 7
# this function will write the correlations in the upper diagonal
# just ignore the details of this function. I modified it from
# ?pairs
panel.cor <- function(x, y, digits = 2, prefix = "", cex.cor, ...)
{
usr <- par("usr"); on.exit(par(usr))
par(usr = c(0, 1, 0, 1))
r <- cor(x, y)
txt <- format(c(r, 0.123456789), digits = digits)[1]
txt <- paste0(prefix, txt)
if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)
text(0.5, 0.5, txt, cex = cex.cor * r)
}
dev.off() # this resets par()
verb.scat <- subset(wiscr.sub, select = c("info", "comp", "arith", "simil", "digit", "vocab"))
pairs(verb.scat, upper.panel = panel.cor)
# Chunk 8
perf.scat <- subset(wiscr.sub, select = !(names(wiscr.sub) %in% names(verb.scat)))
pairs(perf.scat, upper.panel = panel.cor)
# Chunk 9
# Install devtools
# install.packages('devtools')
# Install faoutlier from GitHub
# devtools::install_github('philchalmers/faoutlier')
wiscr.mah <- faoutlier::robustMD(wiscr)
plot(wiscr.mah)
which.max(wiscr.mah$mah)
# Chunk 10
which(wiscr.mah$mah > 40) # identify values
wiscr.nomah <- wiscr[-c(66, 170), ] # drop them
round(cor(wiscr.nomah) - cor(wiscr), 2) # the difference in the correlation matrices
one.mod <- '
iq =~ info + comp + arith + simil + vocab + digit + pictcomp + parang + block + object + coding
'
one.fit <- cfa(mod = one.mod, data = wiscr)
fitmeasures(one.fit, c("chisq", "df", "pvalue", "rmsea", "tli", "cfi", "srmr"))
# Load the lavaan package
library("lavaan")
one.mod <- '
iq =~ info + comp + arith + simil + vocab + digit + pictcomp + parang + block + object + coding
'
one.fit <- cfa(mod = one.mod, data = wiscr)
fitmeasures(one.fit, c("chisq", "df", "pvalue", "rmsea", "tli", "cfi", "srmr"))
two.mod <- '
verb =~ info + comp + arith + simil + vocab + digit
perf =~ pictcomp + parang + block + object + coding
'
two.fit <- cfa(mod = two.mod, data = wiscr)
anova(one.fit, two.fit)
semPlot::semPaths(two.fit)
inspect(two.fit)
summary(two.fit)
summary(two.fit, standardized = TRUE, fit.measures = TRUE)
fit.mean <- cfa(mod = two.mod, data = wiscr, meanstructure = TRUE)
inspect(fit.mean)
lavResiduals(two.fit)
summary(two.fit, rsquare = T)
inspect(two.fit, "rsquare")
obs.var <- apply(wiscr, 2, var)[3:13]
obs.var <- data.frame(obs.var = obs.var, lhs = names(obs.var))
par.ests <- parameterEstimates(two.fit)
error.var <- par.ests[par.ests$op == "~~", c("lhs", "est")]
# merge the data.frames
com.var <- merge(obs.var, error.var)
# proportion unexplained
com.var$prop.unq <- com.var$est / com.var$obs.var
com.var
iq.baseline <- '
info ~~ info
comp ~~ comp
arith ~~ arith
simil ~~ simil
digit ~~ digit
vocab ~~ vocab
pictcomp ~~ pictcomp
parang ~~ parang
block ~~ block
object ~~ object
coding ~~ coding
'
fit.base <- cfa(model = iq.baseline, data = wiscr)
summary(fit.base, fit.measures = T)
mod.fixcoded <- '
verb =~ info + comp + arith + simil + digit + vocab
perf =~ pictcomp + parang + block + object + 0*coding
'
fit.fixcoded <- cfa(mod.fixcoded, wiscr)
summary(fit.nocode, fit.measures = TRUE, standardized = TRUE)
mod.fixcoded <- '
verb =~ info + comp + arith + simil + digit + vocab
perf =~ pictcomp + parang + block + object + 0*coding
'
fit.fixcoded <- cfa(mod.fixcoded, wiscr)
summary(fit.fixcoded, fit.measures = TRUE, standardized = TRUE)
fixedcode.stats <- fitmeasures(fit.fixcoded, fit.measures = c("rmsea", "tli", "cfi"))
org.stats <- fitmeasures(two.fit, fit.measures = c("rmsea", "tli", "cfi"))
rbind(fixedcode.stats, org.stats)
anova(fit.nocode, fit) # chi-square test of difference.
anova(fit.fixcoded, two.fit) # chi-square test of difference.
fixedcode.stats <- fitmeasures(fit.fixcoded, fit.measures = c("rmsea", "tli", "cfi"))
org.stats <- fitmeasures(two.fit, fit.measures = c("rmsea", "tli", "cfi"))
rbind(fixedcode.stats, org.stats)
anova(fit.fixcoded, two.fit) # chi-square test of difference.
iq.cfa.nocode <- '
verb =~ info + comp + arith + simil + digit + vocab
perf =~ pictcomp + parang + block + object
'
fit.nocode <- cfa(iq.cfa.nocode, wiscr)
modindices(fit.nocode, sort. = TRUE)
iq.cfa.emp <- '
verb =~ info + comp + arith + simil + digit + vocab
perf =~ pictcomp + parang + block + object + comp
'
fit.emp <- cfa(iq.cfa.emp, wiscr)
summary(fit.emp, fit.measures = TRUE, standardized = TRUE)
semPaths(fit.emp, what = "stand", fade = F)
semPlot::semPaths(fit.emp, what = "stand", fade = F)
cfa.cooks <- faoutlier::gCD(data = wiscr, mod = iq.cfa.emp)
plot(cfa.cooks)
which(cfa.cooks$gCD )
cfa.cooks$gCD[76]
fit.emp.no76 <- cfa(iq.cfa.emp, wiscr[-c(76),])
summary(fit.emp.no76)
install.packages("BiocManager")
BiocManager::install("GEM", version = "3.8")
library(GEM)
?GEM
browseVignettes("liftOver")
cort.data <- foreign::read.spss("~/Downloads/Dissertation reanalysis_2.1.19.sav", to.data.frame = TRUE)
names(cort.data)
cort.data <- foreign::read.spss("~/Downloads/Dissertation reanalysis_2.1.19.sav", to.data.frame = TRUE)
names(cort.data)
cort.data$polyrisk <- cort.data$polyrisk - mean(cort.data$polyrisk, na.rm = T)
cort.data$female <- ifelse(cort.data$Gender=="female",1,0)
smod <- '
ints =~ RCMAS_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cdiff ~ mald1 + mald2 + polyrisk + mald1x + mald2x + female
ints ~ cdiff + mald1 + mald2 + ts_e + female
into ~ cdiff + mald1 + mald2 + ts_e + female
'
library(lavaan)
sfit <- sem(smod, cort.data, missing = "fiml")
grep("ts", names(cort.data),value = TRUE)
## Adrienne measurement invariance
cort.data <- read.table("~/Downloads/FINAL model variables with missing fixed 8.16.dat", na.strings = "999", col.names = c("id5", "gender", "age", "malst", "cort_diff", "ri", "rs", "polyrisk", "timing", "nominalmal", "ts_e", "TSCO_TOTANX", "cdi", "ts_i", "Self_NA", "Clr_PA", "Clr_NA", "filter", "mald1", "mald2", "mald3", "mald1x", "mald2x", "mald3x"))
cort.data$polyrisk <- cort.data$polyrisk - mean(cort.data$polyrisk, na.rm = T)
cort.data$female <- ifelse(cort.data$Gender=="female",1,0)
cort.data$female <- ifelse(cort.data$gender=="female",1,0)
smod <- '
ints =~ RCMAS_TOTANX + cdi +  self_NA
into =~ ts_i + Clr_NA + Clr_PA
cdiff ~ mald1 + mald2 + polyrisk + mald1xrisk + mald2xrisk + female
ints ~ cdiff + mald1 + mald2 + ts_e + female
into ~ cdiff + mald1 + mald2 + ts_e + female
'
library(lavaan)
sfit <- sem(smod, cort.data, missing = "fiml")
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cdiff ~ mald1 + mald2 + polyrisk + mald1x + mald2x + female
ints ~ cdiff + mald1 + mald2 + ts_e + female
into ~ cdiff + mald1 + mald2 + ts_e + female
'
sfit <- sem(smod, cort.data, missing = "fiml")
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + mald1x + mald2x + female
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- sem(smod, cort.data, missing = "fiml")
table(cort.data$gender)
## Adrienne measurement invariance
cort.data <- read.table("~/Downloads/FINAL model variables with missing fixed 8.16.dat", na.strings = "999", col.names = c("id5", "gender", "age", "malst", "cort_diff", "ri", "rs", "polyrisk", "timing", "nominalmal", "ts_e", "TSCO_TOTANX", "cdi", "ts_i", "Self_NA", "Clr_PA", "Clr_NA", "filter", "mald1", "mald2", "mald3", "mald1x", "mald2x", "mald3x"))
cort.data$polyrisk <- cort.data$polyrisk - mean(cort.data$polyrisk, na.rm = T)
table(cort.data$gender)
cort.data$female <- ifelse(cort.data$gender==1,1,0)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + mald1x + mald2x + female
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- sem(smod, cort.data, missing = "fiml")
summary(sfit, fit.measures = T, standardized = T)
summary(cort.data)
sfit <- sem(smod, cort.data, missing = "fiml")
summary(sfit, fit.measures = T, standardized = T)
summary(cort.data)
sfit <- sem(smod, cort.data, missing = "FIML")
sfit <- sem(smod, cort.data, missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
library(faoutlier)
mod <- gCD(cort.data, smod))
mod <- gCD(cort.data, smod)
warnings()
plot(mod)
max(mod$gCD)
which(mod$gCD)
which.max(mod$gCD)
cort.data[524,]
sfit <- sem(smod, cort.data[-524, ], missing = "FIML", fixed.x = FALSE)
sfit <- lavaan::sem(smod, cort.data[ -524,], missing = "FIML", fixed.x = FALSE)
# mod <- gCD(cort.data, smod)
summary(sfit, fit.measures = T, standardized = T)
summary(cort.data)
boxplot(cort_diff ~ mald2, data = cort.data)
boxplot(cort_diff ~ mald1, data = cort.data)
boxplot(cort_diff ~ mald2, data = cort.data)
cort.data <- read.table("~/Downloads/FINAL model variables with missing fixed 8.16.dat", na.strings = "999", col.names = c("id5", "gender", "age", "malst", "cort_diff", "ri", "rs", "polyrisk", "timing", "nominalmal", "ts_e", "TSCO_TOTANX", "cdi", "ts_i", "Self_NA", "Clr_PA", "Clr_NA", "filter", "mald1", "mald2", "mald3", "mald1x", "mald2x", "mald3x"))
cort.data$polyrisk <- cort.data$polyrisk - mean(cort.data$polyrisk, na.rm = T)
cort.data$female <- ifelse(cort.data$gender==1,0,1)
summary(cort.data)
boxplot(cort_diff ~ mald2, data = cort.data)
boxplot(cort_diff ~ mald1, data = cort.data)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + mald1x + mald2x + female
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
library(faoutlier)
mahalanobis()
library(lavaan)
sfit <- lavaan::sem(smod, cort.data[ -524,], missing = "FIML", fixed.x = FALSE)
summary(sfit)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + female
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
table(cort_diff$mald2, cort_diff$mald2x)
table(cort_diff$mald2, cort_diff$mald2x)
table(cort.data$mald2, cort_data$mald2x)
table(cort.data$mald2, cort.data$mald2x)
table(cort.data$mald2)
table(cort.data$mald2, cort.data$mald2x)
table(cort.data$mald2x)
table(cort.data$polyrisk)
subset(cort.data, mald2 == 0 & mad2x == 1
)
subset(cort.data, mald2 == 0 & mald2x == 1)
subset(cort.data, mald2 == 1 & mald2x == 0)
cort.data$newint1 <- cort.data$mald1 * cort.data$polyrisk
cort.data$newint2 <- cort.data$mald2 * cort.data$polyrisk
table(cort.data$newint2)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + female  + newint1 + newint2
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
table(cort.data$mald2, cort.data$mald2x)
cort.data <- read.table("~/Downloads/FINAL model variables with missing fixed 8.16.dat", na.strings = "999", col.names = c("id5", "gender", "age", "malst", "cort_diff", "ri", "rs", "polyrisk", "timing", "nominalmal", "ts_e", "TSCO_TOTANX", "cdi", "ts_i", "Self_NA", "Clr_PA", "Clr_NA", "filter", "mald1", "mald2", "mald3", "mald1x", "mald2x", "mald3x"))
cort.data$newint1 <- cort.data$mald1 * cort.data$polyrisk
cort.data$newint2 <- cort.data$mald2 * cort.data$polyrisk
table(cort.data$mald2, cort.data$mald2x)
table(cort.data$mald2, cort.data$newint2)
cort.data$mald2 * cort.data$polyrisk
cort.data$newint2 <- cort.data$mald2 * cort.data$polyrisk
table(cort.data$newint2)
cort.data$polyrisk <- cort.data$polyrisk - mean(cort.data$polyrisk, na.rm = T)
table(cort.data$polyrisk)
mean(cort.data$polyrisk)
mean(cort.data$polyrisk, na.rm = TRUE)
cort.data$newint2 <- cort.data$mald2 * cort.data$polyrisk
table(cort.data$mald2, cort.data$newint2)
cort.data <- read.table("~/Downloads/FINAL model variables with missing fixed 8.16.dat", na.strings = "999", col.names = c("id5", "gender", "age", "malst", "cort_diff", "ri", "rs", "polyrisk", "timing", "nominalmal", "ts_e", "TSCO_TOTANX", "cdi", "ts_i", "Self_NA", "Clr_PA", "Clr_NA", "filter", "mald1", "mald2", "mald3", "mald1x", "mald2x", "mald3x"))
cort.data$newint1 <- cort.data$mald1 * cort.data$polyrisk
cort.data$newint2 <- cort.data$mald2 * cort.data$polyrisk
cor.tdata$newint2
cort.data$newint2
table(cort.data$mald2, cort.data$newint2)
table(cort.data$polyrisk)
## Adrienne measurement invariance
cort.data <- read.table("~/Downloads/FINAL model variables with missing fixed 8.16.dat", na.strings = "999", col.names = c("id5", "gender", "age", "malst", "cort_diff", "ri", "rs", "polyrisk", "timing", "nominalmal", "ts_e", "TSCO_TOTANX", "cdi", "ts_i", "Self_NA", "Clr_PA", "Clr_NA", "filter", "mald1", "mald2", "mald3", "mald1x", "mald2x", "mald3x"))
cort.data$newint1 <- cort.data$mald1 * cort.data$polyrisk
cort.data$newint2 <- cort.data$mald2 * cort.data$polyrisk
# cort.data$polyrisk <- cort.data$polyrisk - mean(cort.data$polyrisk, na.rm = T)
cort.data$female <- ifelse(cort.data$gender==1,0,1)
summary(cort.data)
boxplot(cort_diff ~ mald2, data = cort.data)
boxplot(cort_diff ~ mald1, data = cort.data)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + female  + mald1x + mald2x
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
table(cort.data$polyrisk)
table(cort.data$mald2x)
## Adrienne measurement invariance
cort.data <- read.table("~/Downloads/FINAL model variables with missing fixed 8.16.dat", na.strings = "999", col.names = c("id5", "gender", "age", "malst", "cort_diff", "ri", "rs", "polyrisk", "timing", "nominalmal", "ts_e", "TSCO_TOTANX", "cdi", "ts_i", "Self_NA", "Clr_PA", "Clr_NA", "filter", "mald1", "mald2", "mald3", "mald1x", "mald2x", "mald3x"))
cort.data$polyrisk <- cort.data$polyrisk - mean(cort.data$polyrisk, na.rm = T)
cort.data$newint1 <- cort.data$mald1 * cort.data$polyrisk
cort.data$newint2 <- cort.data$mald2 * cort.data$polyrisk
cort.data$female <- ifelse(cort.data$gender==1,0,1)
summary(cort.data)
boxplot(cort_diff ~ mald2, data = cort.data)
boxplot(cort_diff ~ mald1, data = cort.data)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + female  + newint1 + newint2
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
cort.data <- read.table("~/Downloads/FINAL model variables with missing fixed 8.16.dat", na.strings = "999", col.names = c("id5", "gender", "age", "malst", "cort_diff", "ri", "rs", "polyrisk", "timing", "nominalmal", "ts_e", "TSCO_TOTANX", "cdi", "ts_i", "Self_NA", "Clr_PA", "Clr_NA", "filter", "mald1", "mald2", "mald3", "mald1x", "mald2x", "mald3x"))
cort.data$polyrisk <- cort.data$polyrisk - mean(cort.data$polyrisk, na.rm = T)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + female  + mald1x + mald2x
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
cort.data$female <- ifelse(cort.data$gender==1,0,1)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + female  + mald1x + mald2x
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + female
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
## Adrienne measurement invariance
cort.data <- read.table("~/Downloads/FINAL model variables with missing fixed 8.16.dat", na.strings = "999", col.names = c("id5", "gender", "age", "malst", "cort_diff", "ri", "rs", "polyrisk", "timing", "nominalmal", "ts_e", "TSCO_TOTANX", "cdi", "ts_i", "Self_NA", "Clr_PA", "Clr_NA", "filter", "mald1", "mald2", "mald3", "mald1x", "mald2x", "mald3x"))
cort.data$polyrisk <- cort.data$polyrisk - mean(cort.data$polyrisk, na.rm = T)
cort.data$newint1 <- cort.data$mald1 * cort.data$polyrisk
cort.data$newint2 <- cort.data$mald2 * cort.data$polyrisk
cort.data$female <- ifelse(cort.data$gender==1,0,1)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + female  + newint1 + newint2
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + female  + newint1 + newint2
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE)
summary(sfit, fit.measures = T, standardized = T)
## Adrienne measurement invariance
cort.data <- read.table("~/Downloads/FINAL model variables with missing fixed 8.16.dat", na.strings = "999", col.names = c("id5", "gender", "age", "malst", "cort_diff", "ri", "rs", "polyrisk", "timing", "nominalmal", "ts_e", "TSCO_TOTANX", "cdi", "ts_i", "Self_NA", "Clr_PA", "Clr_NA", "filter", "mald1", "mald2", "mald3", "mald1x", "mald2x", "mald3x"))
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + female  + mald2x + mald1x
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE )
summary(sfit, fit.measures = T, standardized = T)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + female  + mald2x + mald1x
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE )
cort.data$female <- ifelse(cort.data$gender==1,0,1)
smod <- '
ints =~ TSCO_TOTANX + cdi +  Self_NA
into =~ ts_i + Clr_NA + Clr_PA
cort_diff ~ mald1 + mald2 + polyrisk + female  + mald2x + mald1x
ints ~ cort_diff + mald1 + mald2 + ts_e + female
into ~ cort_diff + mald1 + mald2 + ts_e + female
'
sfit <- lavaan::sem(smod, cort.data[,], missing = "FIML", fixed.x = FALSE )
summary(sfit, fit.measures = T, standardized = T)
?cfa
detach("package:sem", unload = TRUE)
detach("package:faoutlier", unload = TRUE)
detach("package:sem", unload = TRUE)
?cfa
cfa
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- cfa(HS.model, data=HolzingerSwineford1939)
summary(fit, fit.measures=TRUE)
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- cfa(HS.model, data=HolzingerSwineford1939)
summary(fit, fit.measures=TRUE, standardized = TRUE)
1.000/.554
0.772/0.424
0.554/0.729
0.424/0.581
1.113/0.926
0.855/.838
HS.model <- ' visual  =~ 1*x1 + 1*x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- cfa(HS.model, data=HolzingerSwineford1939)
summary(fit, fit.measures=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
?polychor::polychoric
library(polycor)
?polychor
library(psych)
?polychoric
lsat6
head(lsat6)
?lsat6
lapply(lsat6, 2, mean)
apply(lsat6, 2, mean)
qnrom(apply(lsat6, 2, mean))
qnorm(apply(lsat6, 2, mean))
lsat.mod <- '
lsat =~ Q1 + Q2 + Q3 + Q4 + Q5
'
lsat.fit <- cfa(lsat.mod, lsat6, ordered = paste0("Q", 1:5))
summary(lsat.fit)
summary(lsat.fit, standardized = TRUE)
lsat.fit <- cfa(lsat.mod, lsat6, ordered = paste0("Q", 1:5))
summary(lsat.fit, standardized = TRUE)
